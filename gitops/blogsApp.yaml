---
apiVersion: v1
kind: Namespace
metadata:
  name: frontend
  annotations:
    argocd.argoproj.io/sync-wave: "-3"
  labels:
    name: frontend
---
apiVersion: v1
kind: Namespace
metadata:
  name: backend
  annotations:
    argocd.argoproj.io/sync-wave: "-3"
  labels:
    name: backend
---
apiVersion: v1
kind: Namespace
metadata:
  name: serviceb
  annotations:
    argocd.argoproj.io/sync-wave: "-3"
  labels:
    name: serviceb
---
apiVersion: v1
kind: PersistentVolume
metadata:
  name: mongo-data-pv
  namespace: backend
  annotations:
    argocd.argoproj.io/sync-wave: "-1"
spec:
  accessModes:
    - ReadWriteOnce
  capacity:
    storage: 1Gi
  hostPath:
    path: /data/mongo
---
apiVersion: v1
kind: PersistentVolumeClaim
metadata:
  name: mongo-data
  namespace: backend
  annotations:
    argocd.argoproj.io/sync-wave: "-1"
spec:
  accessModes:
    - ReadWriteOnce 
  resources:
    requests:
      storage: 1Gi
---
apiVersion: v1
data:
  password: YWRtaW5pc3RyYXRvcg==
  username: YWRtaW5pc3RyYXRvcg==
kind: Secret
metadata:
  name: mongo-creds
  namespace: backend
  annotations:
    argocd.argoproj.io/sync-wave: "-1"
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: mongo
  namespace: backend
  annotations:
    argocd.argoproj.io/sync-wave: "-1"
  labels:
    app: mongo
spec:
  replicas: 1
  selector:
    matchLabels:
      app: mongo
  template:
    metadata:
      labels:
        app: mongo
    spec:
      containers:
      - image: mongo
        name: mongo
        args: ["--dbpath","/data/db"]
        env:
        - name: MONGO_INITDB_ROOT_USERNAME
          valueFrom:
            secretKeyRef:
              name: mongo-creds
              key: username
        - name: MONGO_INITDB_ROOT_PASSWORD
          valueFrom:
            secretKeyRef:
              name: mongo-creds
              key: password
        volumeMounts:
        - name: "mongo-data-dir"
          mountPath: "/data/db"
      volumes:
      - name: "mongo-data-dir"
        persistentVolumeClaim:
          claimName: "mongo-data"
---
apiVersion: v1
kind: Service
metadata:
  labels:
    app: mongo
  name: mongo-svc
  namespace: backend
  annotations:
    argocd.argoproj.io/sync-wave: "-1"
spec:
  ports:
  - port: 27017
    protocol: TCP
    targetPort: 27017
  selector:
    app: mongo
---
apiVersion: v1
kind: ConfigMap
metadata:
  name: blogsapp-configmap
  namespace: frontend
data:
  dbMongo: mongodb://mongo-svc.backend:27017
  DB_NAME: blogs_db
---
apiVersion: v1
stringData:
  db-password: administrator
  db-username: administrator
kind: Secret
metadata:
  name: app-creds
  namespace: frontend
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: blogsapp
  namespace: frontend
  labels:
    app: blogs
spec:
  replicas: 1
  selector:
    matchLabels:
      app: blogs
  template:
    metadata:
      labels:
        app: blogs
    spec:
      containers:
        - name: blogs
          image: minamaherdocker/blogsapp:cc109361fe02a8eb3ce16b71d3d79ec5b2a77e5a
          resources:
            limits:
             cpu: 500m
            requests:
             cpu: 200m
          env:
            - name: dbMongo
              valueFrom:
                configMapKeyRef:
                  name: blogsapp-configmap
                  key: dbMongo
            - name: DB_NAME
              valueFrom:
                configMapKeyRef:
                  name: blogsapp-configmap
                  key: DB_NAME
            - name: DB_USER
              valueFrom:
                secretKeyRef:
                  name: app-creds
                  key: db-username
            - name: DB_PASS
              valueFrom:
                secretKeyRef:
                  name: app-creds
                  key: db-password

---
apiVersion: v1
kind: Service
metadata:
  labels:
    app: blogs
  name: blogsapp-svc
  namespace: frontend
spec:
  ports:
  - port: 3000
    protocol: TCP
    targetPort: 3000
    nodePort: 32001
  selector:
    app: blogs
  type: NodePort
status:
  loadBalancer: {}

######################################ServiceB##########################
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: serviceb
  namespace: serviceb
  labels:
    app: serviceb
spec:
  replicas: 1
  selector:
    matchLabels:
      app: serviceb
  template:
    metadata:
      labels:
        app: serviceb
    spec:
      containers:
        - name: serviceb
          image: minamaherdocker/blogsapp-serviceb:v1
          resources:
            limits:
             cpu: 500m
            requests:
             cpu: 200m
---
apiVersion: v1
kind: Service
metadata:
  labels:
    app: serviceb
  name: serviceb-svc
  namespace: serviceb
spec:
  ports:
  - port: 80
    protocol: TCP
    targetPort: 5000
    #nodePort: 32001
  selector:
    app: serviceb
  #type: NodePort
status:
  loadBalancer: {}